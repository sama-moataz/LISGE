{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase.ts"],"sourcesContent":["\nimport { initializeApp, getApps, getApp, type FirebaseOptions } from 'firebase/app';\nimport { \n  getAuth, \n  // GoogleAuthProvider, // No longer needed here for login page\n  // PhoneAuthProvider, // No longer needed here for login page\n  // RecaptchaVerifier // No longer needed here for login page\n} from 'firebase/auth';\nimport { getFirestore, serverTimestamp } from 'firebase/firestore';\n\nconst apiKey = process.env.NEXT_PUBLIC_FIREBASE_API_KEY;\n\nif (!apiKey || typeof apiKey !== 'string' || apiKey.trim() === \"\") {\n  const errorMessage = \"CRITICAL_CONFIG_ERROR: Firebase API Key (NEXT_PUBLIC_FIREBASE_API_KEY) is missing, empty, not a string, or not loaded properly from .env.local. Application cannot initialize Firebase. Please verify your .env.local file in the project root and restart your Next.js development server.\";\n  console.error(errorMessage);\n  // For server-side, throw to halt if critical config is missing.\n  // For client-side, this error will likely be caught by initializeApp if this check somehow passes.\n  if (typeof window === 'undefined') { \n    throw new Error(errorMessage);\n  }\n}\n\nconst firebaseConfig: FirebaseOptions = {\n  apiKey: apiKey,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n  measurementId: process.env.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID, // Optional, keep if used elsewhere\n};\n\nconsole.log(\"Attempting to load Firebase config from environment variables:\");\nconsole.log(\"NEXT_PUBLIC_FIREBASE_API_KEY:\", process.env.NEXT_PUBLIC_FIREBASE_API_KEY ? \"Loaded\" : \"MISSING or empty\");\nconsole.log(\"NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN:\", process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN);\nconsole.log(\"NEXT_PUBLIC_FIREBASE_PROJECT_ID:\", process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID);\n\n// Initialize Firebase\nlet app;\nif (!getApps().length) {\n  try {\n     if (!firebaseConfig.authDomain || !firebaseConfig.projectId) {\n        const errorMsg = `CRITICAL_CONFIG_ERROR: Essential Firebase config values (authDomain, projectId) are missing or undefined in firebaseConfig. Check .env.local and restart server. AuthDomain: ${firebaseConfig.authDomain}, ProjectID: ${firebaseConfig.projectId}`;\n        console.error(errorMsg);\n        if (typeof window === 'undefined') {\n            throw new Error(errorMsg);\n        }\n    }\n    app = initializeApp(firebaseConfig);\n    console.log('Firebase app initialization attempted.');\n  } catch (error: any) {\n    console.error('CRITICAL_ERROR_DURING_FIREBASE_INIT:', error.message, error.code);\n    console.error('Attempted Firebase Config (API Key Redacted):', JSON.stringify({ ...firebaseConfig, apiKey: firebaseConfig.apiKey ? 'REDACTED' : 'MISSING/INVALID' }));\n    throw error; \n  }\n} else {\n  app = getApp();\n  console.log('Existing Firebase app retrieved.');\n}\n\nconst auth = getAuth(app);\nconst db = getFirestore(app);\n// const googleAuthProvider = new GoogleAuthProvider(); // No longer needed for login page\n\n// RecaptchaVerifier is still exported for potential future use or if other parts of the app might use phone auth.\n// If truly not needed anywhere, it can be fully removed.\nexport { app, auth, db, serverTimestamp };\n// Export RecaptchaVerifier separately if it's needed elsewhere but not in this direct context\nexport { RecaptchaVerifier } from 'firebase/auth';\n"],"names":[],"mappings":";;;;;AACA;AAAA;AACA;AAAA;AAMA;AAAA;;;;AAEA,MAAM;AAEN,IAAI,CAAC,UAAU,OAAO,WAAW,YAAY,OAAO,IAAI,OAAO,IAAI;IACjE,MAAM,eAAe;IACrB,QAAQ,KAAK,CAAC;IACd,gEAAgE;IAChE,mGAAmG;IACnG,wCAAmC;QACjC,MAAM,IAAI,MAAM;IAClB;AACF;AAEA,MAAM,iBAAkC;IACtC,QAAQ;IACR,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;IACL,eAAe,QAAQ,GAAG,CAAC,mCAAmC;AAChE;AAEA,QAAQ,GAAG,CAAC;AACZ,QAAQ,GAAG,CAAC,iCAAiC,uCAA2C;AACxF,QAAQ,GAAG,CAAC;AACZ,QAAQ,GAAG,CAAC;AAEZ,sBAAsB;AACtB,IAAI;AACJ,IAAI,CAAC,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,EAAE;IACrB,IAAI;QACD,IAAI,CAAC,eAAe,UAAU,IAAI,CAAC,eAAe,SAAS,EAAE;YAC1D,MAAM,WAAW,CAAC,6KAA6K,EAAE,eAAe,UAAU,CAAC,aAAa,EAAE,eAAe,SAAS,EAAE;YACpQ,QAAQ,KAAK,CAAC;YACd,wCAAmC;gBAC/B,MAAM,IAAI,MAAM;YACpB;QACJ;QACA,MAAM,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE;QACpB,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,wCAAwC,MAAM,OAAO,EAAE,MAAM,IAAI;QAC/E,QAAQ,KAAK,CAAC,iDAAiD,KAAK,SAAS,CAAC;YAAE,GAAG,cAAc;YAAE,QAAQ,eAAe,MAAM,GAAG,aAAa;QAAkB;QAClK,MAAM;IACR;AACF,OAAO;IACL,MAAM,CAAA,GAAA,oLAAA,CAAA,SAAM,AAAD;IACX,QAAQ,GAAG,CAAC;AACd;AAEA,MAAM,OAAO,CAAA,GAAA,6MAAA,CAAA,UAAO,AAAD,EAAE;AACrB,MAAM,KAAK,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 194, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firestoreService.ts"],"sourcesContent":["\n'use server';\n\nimport { db } from '@/lib/firebase';\nimport type { Scholarship } from '@/types';\nimport {\n  collection,\n  getDocs,\n  addDoc,\n  updateDoc,\n  deleteDoc,\n  doc,\n  serverTimestamp,\n  query,\n  orderBy,\n  Timestamp,\n  getDoc,\n  where,\n  writeBatch,\n} from 'firebase/firestore';\n\nconst SCHOLARSHIPS_COLLECTION = 'SCHOLARSHIPS';\n\n// Helper to convert Firestore doc data to Scholarship type\nconst mapDocToScholarship = (docSnapshot: any): Scholarship => {\n  const data = docSnapshot.data();\n  return {\n    id: docSnapshot.id,\n    name: data.name || '',\n    description: data.description || '',\n    eligibility: data.eligibility || '',\n    websiteUrl: data.websiteUrl || '',\n    iconName: data.iconName || undefined,\n    category: data.category || undefined,\n    location: data.location || 'Global',\n    ageRequirement: data.ageRequirement || undefined,\n    fundingLevel: data.fundingLevel || undefined,\n    destinationRegion: data.destinationRegion || undefined,\n    targetLevel: data.targetLevel || undefined,\n    fundingCountry: data.fundingCountry || undefined,\n    partner: data.partner || undefined,\n    coverage: data.coverage || undefined,\n    deadline: data.deadline || undefined,\n    imageUrl: data.imageUrl || undefined,\n    createdAt: data.createdAt instanceof Timestamp ? data.createdAt : undefined,\n    updatedAt: data.updatedAt instanceof Timestamp ? data.updatedAt : undefined,\n  } as Scholarship;\n};\n\n\n// --- Scholarship Functions ---\n\nexport async function getScholarships(): Promise<Scholarship[]> {\n  try {\n    const scholarshipsRef = collection(db, SCHOLARSHIPS_COLLECTION);\n    const q = query(scholarshipsRef, orderBy('createdAt', 'desc'));\n    const querySnapshot = await getDocs(q);\n    return querySnapshot.docs.map(mapDocToScholarship);\n  } catch (error) {\n    console.error(\"Error fetching scholarships: \", error);\n    throw new Error(\"Failed to fetch scholarships.\");\n  }\n}\n\nexport async function getScholarshipById(id: string): Promise<Scholarship | null> {\n  try {\n    const scholarshipDocRef = doc(db, SCHOLARSHIPS_COLLECTION, id);\n    const docSnap = await getDoc(scholarshipDocRef);\n    if (docSnap.exists()) {\n      return mapDocToScholarship(docSnap);\n    }\n    return null;\n  } catch (error) {\n    console.error(`Error fetching scholarship with ID ${id}: `, error);\n    throw new Error(`Failed to fetch scholarship ${id}.`);\n  }\n}\n\nexport async function addScholarship(scholarshipData: Omit<Scholarship, 'id' | 'createdAt' | 'updatedAt'>): Promise<string> {\n  try {\n    const scholarshipsRef = collection(db, SCHOLARSHIPS_COLLECTION);\n    const dataToSave = {\n      ...scholarshipData,\n      iconName: scholarshipData.iconName || null,\n      category: scholarshipData.category || null,\n      ageRequirement: scholarshipData.ageRequirement || null,\n      fundingLevel: scholarshipData.fundingLevel || null,\n      destinationRegion: scholarshipData.destinationRegion || null,\n      targetLevel: scholarshipData.targetLevel || null,\n      fundingCountry: scholarshipData.fundingCountry || null,\n      partner: scholarshipData.partner || null,\n      coverage: scholarshipData.coverage || null,\n      deadline: scholarshipData.deadline || null,\n      imageUrl: scholarshipData.imageUrl || null,\n      createdAt: serverTimestamp(),\n      updatedAt: serverTimestamp(),\n    };\n    const docRef = await addDoc(scholarshipsRef, dataToSave);\n    return docRef.id;\n  } catch (error) {\n    console.error(\"Error adding scholarship: \", error);\n    throw new Error(\"Failed to add scholarship.\");\n  }\n}\n\nexport async function updateScholarship(id: string, scholarshipData: Partial<Omit<Scholarship, 'id' | 'createdAt'>>): Promise<void> {\n  try {\n    const scholarshipDocRef = doc(db, SCHOLARSHIPS_COLLECTION, id);\n    const dataToUpdate: { [key: string]: any } = {};\n    // Ensure all fields in scholarshipData are handled, converting undefined to null\n    (Object.keys(scholarshipData) as Array<keyof typeof scholarshipData>).forEach(key => {\n        const value = scholarshipData[key];\n        dataToUpdate[key] = value === undefined ? null : value;\n    });\n    dataToUpdate.updatedAt = serverTimestamp();\n\n    await updateDoc(scholarshipDocRef, dataToUpdate);\n  } catch (error) {\n    console.error(`Error updating scholarship ${id}: `, error);\n    throw new Error(`Failed to update scholarship ${id}.`);\n  }\n}\n\nexport async function deleteScholarship(id: string): Promise<void> {\n  try {\n    const scholarshipDocRef = doc(db, SCHOLARSHIPS_COLLECTION, id);\n    await deleteDoc(scholarshipDocRef);\n  } catch (error) {\n    console.error(`Error deleting scholarship ${id}: `, error);\n    throw new Error(`Failed to delete scholarship ${id}.`);\n  }\n}\n\nexport async function seedInitialScholarships(scholarshipsToSeed: Omit<Scholarship, 'id' | 'createdAt' | 'updatedAt'>[]): Promise<void> {\n  const scholarshipsRef = collection(db, SCHOLARSHIPS_COLLECTION);\n  const existingScholarshipsSnapshot = await getDocs(query(scholarshipsRef, where(\"name\", \"in\", scholarshipsToSeed.map(s => s.name))));\n  const existingNames = new Set(existingScholarshipsSnapshot.docs.map(doc => doc.data().name));\n\n  const batch = writeBatch(db);\n  let seededCount = 0;\n\n  scholarshipsToSeed.forEach(scholarship => {\n    if (!existingNames.has(scholarship.name)) {\n      const newDocRef = doc(scholarshipsRef); \n      const dataToSave = {\n        ...scholarship,\n        iconName: scholarship.iconName || null,\n        category: scholarship.category || null,\n        ageRequirement: scholarship.ageRequirement || null,\n        fundingLevel: scholarship.fundingLevel || null,\n        destinationRegion: scholarship.destinationRegion || null,\n        targetLevel: scholarship.targetLevel || null,\n        fundingCountry: scholarship.fundingCountry || null,\n        partner: scholarship.partner || null,\n        coverage: scholarship.coverage || null,\n        deadline: scholarship.deadline || null,\n        imageUrl: scholarship.imageUrl || null,\n        createdAt: serverTimestamp(),\n        updatedAt: serverTimestamp(),\n      };\n      batch.set(newDocRef, dataToSave);\n      seededCount++;\n    }\n  });\n\n  if (seededCount > 0) {\n    await batch.commit();\n    console.log(`Successfully seeded ${seededCount} new scholarships.`);\n  } else {\n    console.log(\"No new scholarships to seed (based on name check).\");\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 371, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/admin/scholarships/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getScholarships as '0018ee4fbf31b0f97b9b84bf59f0c03e12dfe83bb2'} from 'ACTIONS_MODULE0'\nexport {deleteScholarship as '409680e4b13f45cbc0455dbf8c686bb2e0f18dd75f'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 426, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/scholarships/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/admin/scholarships/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/admin/scholarships/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAuS,GACpU,qEACA","debugId":null}},
    {"offset": {"line": 440, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/scholarships/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/admin/scholarships/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/admin/scholarships/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAmR,GAChT,iDACA","debugId":null}},
    {"offset": {"line": 454, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}