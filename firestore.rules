
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Rules for the USERS collection
    match /USERS/{userId} {
      // Allow a user to create their own profile document if their UID matches the document ID.
      // This is used during signup.
      allow create: if request.auth != null && request.auth.uid == userId;

      // Allow a user to read their own profile document.
      // This is used by AuthContext and potentially on login.
      allow read: if request.auth != null && request.auth.uid == userId;

      // Allow a user to update their own profile document.
      // This is used on login to update lastLoginAt.
      allow update: if request.auth != null && request.auth.uid == userId;

      // Generally, users should not be able to delete their own profiles directly through client code.
      allow delete: if false;
    }

    // Rules for SCHOLARSHIPS collection
    match /SCHOLARSHIPS/{scholarshipId} {
      allow read: if true; // Publicly readable
      // Allow admin to create, update, delete scholarships
      allow create, update, delete: if request.auth != null && get(/databases/$(database)/documents/USERS/$(request.auth.uid)).data.role == 'Admin';
    }

    // Fallback: By default, deny all reads and writes to any other collections/paths
    // not explicitly matched above. This is a good security practice.
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
